# -*- coding: utf-8 -*-
'''
フィボナッチ数列とは、0と1から始まり、直前の2つの数を足して次の数を作る、不思議な規則を持った数列のことです。
0,1,1,2,3,5,8,13,21,34,...
    **1番目と2番目の数は0と1**です。
    **3番目の数は、前の2つ（0 + 1）を足して1**になります。
    **4番目の数は、前の2つ（1 + 1）を足して2**になります。
このようにして、無限に続く数列が作られます。

フィボナッチ数列と自然界のつながり
この数列が面白いのは、私たちの身の回りの自然の中に、この規則性が見つけられることです。
例えば、以下のような例が知られています。
    ひまわりの種の並び：ひまわりの種の渦巻きの数は、フィボナッチ数列の数になることが多いです。
    松ぼっくりのうろこの並び：松ぼっくりのらせん状の並びも、フィボナッチ数に対応していることがあります。
    植物の花弁の数：ユリやアヤメは3枚、キンポウゲは5枚、コスモスは8枚など、フィボナッチ数になっている植物は数多くあります。

フィボナッチ数列は、数学的な規則だけでなく、自然界の成長パターンにも現れる、非常に興味深い概念です。
'''
# 何番目まで表示するかをユーザーに入力してもらう
days = int(input("何日分のフィボナッチ数列を増やしますか？: "))

# 最初の2つの数を定義
a, b = 0, 1

# 結果を保存するリスト
fib_list = [a, b]

# 入力された日数分、フィボナッチ数列を生成する
for i in range(days - 2):  # 最初の2つの数はすでにリストに入っているので、days-2回繰り返す
    next_number = a + b
    fib_list.append(next_number)
    a, b = b, next_number

# 結果を表示する
print(f"フィボナッチ数列は {fib_list} です！")
